<library path="libmuse_mcl_core_plugins">
   <!-- Update functions -->
   <class type="muse_mcl::BeamModel" base_class_type="muse_mcl::UpdateModel">
     <description>Beam model update function.</description>
   </class>
   <class type="muse_mcl::BeamModelAMCL" base_class_type="muse_mcl::UpdateModel">
     <description>Beam model update function.</description>
   </class>
   <class type="muse_mcl::BeamModelMLE" base_class_type="muse_mcl::UpdateModel">
     <description>Beam model update function.</description>
   </class>
   <class type="muse_mcl::LikelihoodFieldModel" base_class_type="muse_mcl::UpdateModel">
     <description>Likelihoodfield model update function.</description>
   </class>
   <class type="muse_mcl::LikelihoodFieldModelAMCL" base_class_type="muse_mcl::UpdateModel">
     <description>Likelihoodfield model update function.</description>
   </class>
   <class type="muse_mcl::LikelihoodFieldProbModelAMCL" base_class_type="muse_mcl::UpdateModel">
     <description>Likelihoodfield model update function with consistency check.</description>
   </class>
   <!-- Propagation Functions -->
   <class type="muse_mcl::DifferentialDrive" base_class_type="muse_mcl::PredictionModel">
     <description>Differential drive propagation model.</description>
   </class>
   <class type="muse_mcl::DifferentialDriveAbs" base_class_type="muse_mcl::PredictionModel">
     <description>
        Differential drive propagation model using only absolute values in the terms,
        instead of quadratic ones.
   </description>
   </class>
   <class type="muse_mcl::OmniDrive" base_class_type="muse_mcl::PredictionModel">
     <description>Omnidirectional drive propagation model.</description>
   </class>
   <!-- Pose Generation -->
   <class type="muse_mcl::Normal2D" base_class_type="muse_mcl::NormalPoseGeneration">
     <description>2D normal distributed pose generation for pose initialation by the user.</description>
   </class>
   <class type="muse_mcl::Normal3D" base_class_type="muse_mcl::NormalPoseGeneration">
     <description>3D normal distributed pose generation for pose initialation by the user.</description>
   </class>
   <class type="muse_mcl::UniformAllMaps2D" base_class_type="muse_mcl::UniformPoseGeneration">
     <description>
        2D uniform pose generation for global initialization with an axis aligned
        bounding rectangle containing all given maps.
     </description>
   </class>

   <class type="muse_mcl::UniformMainMap2D" base_class_type="muse_mcl::UniformPoseGeneration">
     <description>
        2D uniform pose generation for global initialization with an axis aligned
        bounding rectangle of the main map. All other maps are used for validation.
     </description>
   </class>
   <!-- Resampling -->
   <class type="muse_mcl::KLD2D" base_class_type="muse_mcl::Resampling">
     <description>2D resampling with adaptive sample size.</description>
   </class>
   <class type="muse_mcl::KLD3D" base_class_type="muse_mcl::Resampling">
     <description>3D resampling with adaptive sample size.</description>
   </class>
   <class type="muse_mcl::Multinomial" base_class_type="muse_mcl::Resampling">
     <description>Multinomial sampling.</description>
   </class>
   <class type="muse_mcl::Residual" base_class_type="muse_mcl::Resampling">
     <description>Residual resampling.</description>
   </class>
   <class type="muse_mcl::Stratified" base_class_type="muse_mcl::Resampling">
     <description>Stratified resampling.</description>
   </class>
   <class type="muse_mcl::Systematic" base_class_type="muse_mcl::Resampling">
     <description>Systematic resampling.</description>
   </class>
   <class type="muse_mcl::WheelOfFortune" base_class_type="muse_mcl::Resampling">
     <description>Systematic resampling.</description>
   </class>
   <!-- Map Providers -->
   <class type="muse_mcl::MapProviderBinaryGridMap" base_class_type="muse_mcl::MapProvider">
     <description>Provides binarized map versions given a destinct threshold by topic.</description>
   </class>
   <class type="muse_mcl::MapProviderBinaryGridMapService" base_class_type="muse_mcl::MapProvider">
      <description>Provides binarized map versions given a destinct threshold by service.</description>
   </class>
   <class type="muse_mcl::MapProviderDistanceGridMap" base_class_type="muse_mcl::MapProvider">
      <description>Provides cspace map versions given a destinct threshold by topic.</description>
   </class>
   <class type="muse_mcl::MapProviderDistanceGridMapService" base_class_type="muse_mcl::MapProvider">
      <description>Provides cspace map versions given a destinct threshold by Service.</description>
   </class>
   <class type="muse_mcl::MapProviderProbabilityGridMap" base_class_type="muse_mcl::MapProvider">
      <description>Provides floating point probability map versions by topic.</description>
   </class>
   <class type="muse_mcl::MapProviderProbabilityGridMapService" base_class_type="muse_mcl::MapProvider">
      <description>Provides floating point probability map versions by service.</description>
   </class>
   <!-- Data Providers -->
   <class type="muse_mcl::DataProviderLaser2D" base_class_type="muse_mcl::DataProvider">
      <description>Provides 2D laserscans with the possible to define a linear and angular FOV.</description>
   </class>
   <class type="muse_mcl::DataProviderOdometry" base_class_type="muse_mcl::DataProvider">
      <description>Data provider for standard odmetry messages.</description>
   </class>
</library>
